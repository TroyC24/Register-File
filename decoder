module decoder (S, F);
	input [4:0] S;
	output reg [31:0] F;
	
	always @(S) begin 
	case (S)
		5'b00000: F<= 32'b00000000000000000000000000000001;
		5'b00001: F<= 32'b00000000000000000000000000000010;
		5'b00010: F<= 32'b00000000000000000000000000000100;
		5'b00011: F<= 32'b00000000000000000000000000001000;
		5'b00100: F<= 32'b00000000000000000000000000010000;
		5'b00101: F<= 32'b00000000000000000000000000100000;
		5'b00110: F<= 32'b00000000000000000000000001000000;
		5'b00111: F<= 32'b00000000000000000000000010000000;
		5'b01000: F<= 32'b00000000000000000000000100000000;
		5'b01001: F<= 32'b00000000000000000000001000000000;
		5'b01010: F<= 32'b00000000000000000000010000000000;
		5'b01011: F<= 32'b00000000000000000000100000000000;
		5'b01100: F<= 32'b00000000000000000001000000000000;
		5'b01101: F<= 32'b00000000000000000010000000000000;
		5'b01110: F<= 32'b00000000000000000100000000000000;
		5'b01111: F<= 32'b00000000000000001000000000000000;
		5'b10000: F<= 32'b00000000000000010000000000000000;
		5'b10001: F<= 32'b00000000000000100000000000000000;
		5'b10010: F<= 32'b00000000000001000000000000000000;
		5'b10011: F<= 32'b00000000000010000000000000000000;
		5'b10100: F<= 32'b00000000000100000000000000000000;
		5'b10101: F<= 32'b00000000001000000000000000000000;
		5'b10110: F<= 32'b00000000010000000000000000000000;
		5'b10111: F<= 32'b00000000100000000000000000000000;
		5'b11000: F<= 32'b00000001000000000000000000000000;
		5'b11001: F<= 32'b00000010000000000000000000000000;
		5'b11010: F<= 32'b00000100000000000000000000000000;
		5'b11011: F<= 32'b00001000000000000000000000000000;
		5'b11100: F<= 32'b00010000000000000000000000000000;
		5'b11101: F<= 32'b00100000000000000000000000000000;
		5'b11110: F<= 32'b01000000000000000000000000000000;
		5'b11111: F<= 32'b10000000000000000000000000000000;
	endcase
	end
	
endmodule
