`timescale 1ns/1ps
module muxTB();
	reg [7:0] R0,
	R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14,R15,R16,R17,R18,R19,R20,R21,R22,
	R23,R24,R25,R26,R27,R28,R29,R30,R31;
	
	reg [4:0] S;
	wire [7:0] F;

	mux dut (R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14,R15,R16,R17,R18,R19,
	R20,R21,R22,R23,R24,R25,R26,R27,R28,R29,R30,R31,S,F);
		
	initial 
		S = 5'b00000;
	always begin
	# 10 S = S + 1'b1;
	end
	
	initial begin
		 R0<= 8'b00000001;
		 R1<= 8'b00000010;
		 R2<= 8'b00000100;
		 R3<= 8'b00001000;
		 R4<= 8'b00010000;
		 R5<= 8'b00100000;
		 R6<= 8'b01000000;
		 R7<= 8'b10000000;
		 R8<= 8'b00000001;
		 R9<= 8'b00000010;
		R10<= 8'b00000100;
		R11<= 8'b00001000;
		R12<= 8'b00010000;
		R13<= 8'b00100000;
		R14<= 8'b01000000;
		R15<= 8'b10000000;
		R16<= 8'b00000001;
		R17<= 8'b00000010;
		R18<= 8'b00000100;
		R19<= 8'b00001000;
		R20<= 8'b00010000;
		R21<= 8'b00100000;
		R22<= 8'b01000000;
		R23<= 8'b10000000;
		R24<= 8'b00000001;
		R25<= 8'b00000010;
		R26<= 8'b00000100;
		R27<= 8'b00001000;
		R28<= 8'b00010000;
		R29<= 8'b00100000;
		R30<= 8'b01000000;
		R31<= 8'b10000000;
	end
  
	initial begin
		#500 $stop;
	end
  
endmodule
